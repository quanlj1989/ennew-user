<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/task 
       http://www.springframework.org/schema/task/spring-task.xsd
       http://code.alibabatech.com/schema/dubbo 
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="jdbcUrl" value="${mysql.url}"/>
        <property name="username" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>

        <property name="driverClassName" value="${db.driverClassName}"/>

        <property name="connectionTimeout" value="${db.connectionTimeout}"/>
        <property name="validationTimeout" value="${db.validationTimeout}"/>
        <property name="idleTimeout" value="${db.idleTimeout}"/>
        <property name="maxLifetime" value="${db.maxLifetime}"/>
        <property name="maximumPoolSize" value="${db.maxPoolSize}"/>
        <property name="minimumIdle" value="${db.minIdle}"/>
        <property name="connectionTestQuery" value="${db.connectionTestQuery}"/>
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath*:mappings/*.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.enn.ygego.sunny.user.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="cn.enn.ygego.core.exception.BusinessException" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="cn.enn.ygego.core.exception.BusinessException" />
            <tx:method name="create*" propagation="REQUIRED" rollback-for="cn.enn.ygego.core.exception.BusinessException" />
            <tx:method name="consume*" propagation="REQUIRED" rollback-for="cn.enn.ygego.core.exception.BusinessException" />
            <tx:method name="assign*" propagation="REQUIRED" rollback-for="cn.enn.ygego.core.exception.BusinessException" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="cn.enn.ygego.core.exception.BusinessException" />
            <tx:method name="batch*" propagation="REQUIRED" rollback-for="cn.enn.ygego.core.exception.BusinessException" />
            <tx:method name="modify*" propagation="REQUIRED" rollback-for="cn.enn.ygego.core.exception.BusinessException" />
			<tx:method name="reset*" propagation="REQUIRED" rollback-for="cn.enn.ygego.core.exception.BusinessException" />
			<tx:method name="remove*" propagation="REQUIRED" rollback-for="cn.enn.ygego.core.exception.BusinessException" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="cn.enn.ygego.core.exception.BusinessException" />
			<tx:method name="cancel*" propagation="REQUIRED" rollback-for="cn.enn.ygego.core.exception.BusinessException" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="search*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="serviceMethod"
			expression="(execution(* cn.enn.ygego.sunny.user.service.impl.*.*(..)))" />
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
	</aop:config>

</beans>